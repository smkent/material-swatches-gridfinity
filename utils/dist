#!/bin/sh

output_file="dist.zip"

set -e

cd "$(dirname "${0}")/.."

tmp_dir="$(mktemp -d)"
rm_tmp_dir() {
    if [ -d "${tmp_dir}" ]; then
        rm -rvf "${tmp_dir}"
    fi
}
trap rm_tmp_dir EXIT

render() {
    gridx="${1?}"; shift;
    gridy="${1?}"; shift;
    gridz="${1?}"; shift;
    separator="${1?}"; shift;
    out_file="${tmp_dir}/stl/swatch-bin-${gridx}x${gridy}x${gridz}.stl"
    mkdir -vp "$(dirname "${out_file}")"
    (
        set -x
        openscad \
            swatch-bin.scad \
            -D "gridx=${gridx}" \
            -D "gridy=${gridy}" \
            -D "gridz=${gridz}" \
            -D "Separator_Style=${separator}" \
            -o "${out_file}"
    )
}

for vars in \
        "1 1" "1 2" "1 3" "1 4" \
        "2 2" "2 3" "2 4" \
    ; do
    # shellcheck disable=SC2086
    render ${vars} 3 1
done

set -x

rm -vf "${output_file}"

abs_output_file="$(readlink -f "${output_file}")"

# Strip third-party sub directory paths from toplevel *.scad file(s)
for scad_file in $(git ls-files '*.scad'); do
    dest="${tmp_dir}/$(basename "${scad_file}")"
    sed \
        -Ee 's:^((include|use)\s<)third-party/([/a-zA-Z0-9-]+/)*(.+)(>;$):\1\4\5:g' \
        "${scad_file}" \
        > "${dest}"
    grep -Ee '^(include|use)' "${dest}" || true
done

(
    git ls-files images/
    find third-party/ -iname '*.scad'
) | xargs cp -t "${tmp_dir}"

for dir in images "${tmp_dir}"; do
    (
        cd "${dir}"
        zip -r "${abs_output_file}" .
    )
done
